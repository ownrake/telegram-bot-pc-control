import logging; import os; import time; import sys

import pyautogui
import subprocess

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart

from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

import app.database.requests as rq
import app.user.user_keyboards as kb

client = Router()

class Input_String(StatesGroup):
    string = State()


@client.message(CommandStart())
async def start(message: Message):
    await message.answer(f"user-pc: <code>{os.getlogin()}</code>\n\nüñ• –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:", 
        reply_markup=kb.main_menu,
        parse_mode="HTML")

@client.callback_query(F.data.in_(["back_main_menu"]))
async def back_main_menu(call: CallbackQuery):
    await call.message.edit_text(f"user-pc: <code>{os.getlogin()}</code>\n\nüñ• –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:", 
        reply_markup=kb.main_menu,
        parse_mode="HTML")

@client.callback_query(F.data.in_(["browser", "back_browser_menu"]))
async def browser(call: CallbackQuery):
    await call.message.edit_text("–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏.", 
        reply_markup=kb.browser_menu)

    @client.callback_query(F.data.in_(["open_browser"]))
    async def open_browser(call: CallbackQuery):
        await call.answer("–ó–∞–ø—É—Å–∫–∞—é Firefox...")

        file_path = r'C:/Program Files (x86)/Mozilla Firefox/firefox.exe'
        subprocess.Popen([file_path])

        time.sleep(2)

        pyautogui.press('enter')

        await call.answer("Firefox —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω ‚úÖ")

    @client.callback_query(F.data.in_(["close_browser"]))
    async def close_browser(call: CallbackQuery):
        try:
            await call.answer("–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç—å Firefox...")

            os.system('taskkill /f /im firefox.exe')

            await call.answer("FireFox —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç ‚úÖ")
        except:
            await call.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å FireFox ü§°")

    @client.callback_query(F.data.in_(["close_tab"]))
    async def close_tab(call: CallbackQuery):
        try:
            pyautogui.hotkey('ctrl', 'w')
            await call.answer("–í–∫–ª–∞–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞ ‚úÖ")
        except:
            await call.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É ü§°")

    @client.callback_query(F.data.in_(["also_browser"]))
    async def also_browser(call: CallbackQuery):
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º",
            reply_markup=kb.also_browser)

        @client.callback_query(F.data.in_(["open_youtube"]))
        async def open_youtube(call: CallbackQuery):
            try:
                await call.answer("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å YouTube...")

                pyautogui.hotkey('ctrl', 't')
                pyautogui.moveTo(x=736, y=68)
                pyautogui.click(button='left')
                pyautogui.write('https://youtube.com')
                pyautogui.press('enter')

                await call.answer("YouTube —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω ‚úÖ")
            except:
                await call.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å YouTube ü§°")

        @client.callback_query(F.data.in_(["open_user"]))
        async def open_user(call: CallbackQuery, state: FSMContext):
            await state.set_state(Input_String.string)
            await call.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å (–Ω–∞ –ê–Ω–≥–ª–∏—Å–∫–æ–º).")

            @client.message(Input_String.string)
            async def input_string(message: Message, state: FSMContext):
                await state.update_data(string=message.text)
                data = await state.get_data()

                pyautogui.hotkey('ctrl', 't')
                pyautogui.moveTo(x=736, y=68)
                pyautogui.click(button='left')
                pyautogui.write(f'{data["string"]}')
                pyautogui.press('enter')

                await message.answer(f"<code>{data["string"]}</code> —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç ‚úÖ",
                    parse_mode="HTML")

                await state.clear()

                await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º", 
                    reply_markup=kb.also_browser)

@client.callback_query(F.data.in_(["tab"]))
async def tab(call: CallbackQuery):
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–∫–∏.",
        reply_markup=kb.open_tab_program)

    @client.callback_query(F.data.in_(["firefox_tab"]))
    async def firefox_tab(call: CallbackQuery):
        pyautogui.hotkey('win', '8')

    @client.callback_query(F.data.in_(["discord_tab"]))
    async def discord_tab(call: CallbackQuery):
        pyautogui.hotkey('win', '4')

    @client.callback_query(F.data.in_(["telegram_tab"]))
    async def telegram_tab(call: CallbackQuery):
        pyautogui.hotkey('win', '3')